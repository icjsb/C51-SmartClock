C51 COMPILER V9.00   CLOCKER                                                               01/16/2019 10:26:32 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE CLOCKER
OBJECT MODULE PLACED IN Clocker.OBJ
COMPILER INVOKED BY: D:\MCU\KEILMDK\C51\BIN\C51.EXE Clocker.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <reg51.h>
   2          #define Timer(fr) 65536 - (12000000 / 12) / (fr << 1)
   3          #define DIAO(n) (n << 1) / 3    //附点n分音符的换算
   4          typedef unsigned char UCHAR;
   5          typedef unsigned int UINT;
   6          typedef unsigned long ULONG;
   7          sbit BUZZ = P2^3;
   8          UINT code Fre[] = 
   9          {                                             //低音1-7，中音 1-7 和高音 1-7对应的频率列表
  10                  262, 294, 330, 349, 392, 440, 494,
  11                  523, 587, 659, 698, 784, 880, 988,
  12                  1047, 1175, 1319, 1397, 1568, 1760, 1976
  13          };
  14                                                  
  15          UINT code Time[] = 
  16          {      //低音1-7，中音 1-7 和高音 1-7对应的定时器重载值
  17                  Timer(262), Timer(294), Timer(330), Timer(349), Timer(392), Timer(440), Timer(494),
  18              Timer(523), Timer(587), Timer(659), Timer(698), Timer(784), Timer(880), Timer(988),
  19              Timer(1047), Timer(1175), Timer(1319), Timer(1397), Timer(1568), Timer(1760), Timer(1976),
  20                  };
  21                  
  22          //小星星
  23          UCHAR code xiaoxingxing[] = 
  24          {                          
  25                                                                                   8,8,12,12,
  26                                              /* 13,13,12,
  27                                                                                   11,11,10,10,
  28                                                                                   9,9,8,
  29                                                                                   12,12,11,11,
  30                                                                                   10,10,9,
  31                                                                                   12,12,11,11,
  32                                                                                   10,10,9,*/
  33          };
  34          UCHAR code fenyinfu[] = 
  35          {       //音名对应的时值，4表示4分音符，8表示8分音符，16表示16分音符
  36              4,4,4,4,
  37          /*      4,4,2,
  38                  4,4,4,4,
  39                  4,4,2,
  40                  4,4,4,4,
  41                  4,4,2,
  42                  4,4,4,4,
  43                  4,4,2,*/        
  44          };
  45          
  46          bit enable = 1, TimeFlag = 0;
  47          UCHAR T0RH = 0XFF, T0RL = 0X00;
  48          
  49          void Timer0()
  50          {
  51   1              EA = 1;
  52   1          TMOD |= 0X01;
  53   1          TH0 = T0RH;
  54   1          TL0 = T0RL;
  55   1          ET0 = 1;
C51 COMPILER V9.00   CLOCKER                                                               01/16/2019 10:26:32 PAGE 2   

  56   1          TR0 = 1;    
  57   1      }
  58          
  59          void Timer1()
  60          {
  61   1          TMOD |= 0X10;
  62   1          TH1 = (65536-10)/256;
  63   1              TL1 = (65536-10)%256;
  64   1          ET1 = 1;    
  65   1      }
  66          
  67          void Delay(UINT n) 
  68          {
  69   1          UINT i,j;
  70   1              for (j = 0; j < 110; j++)
  71   1            for (i = 0; i < n; i++) ;
  72   1      }
  73          
  74          UINT flag = 0; 
  75          UCHAR i;
  76          UCHAR idx;
  77          void PlayMusic(UCHAR speed)  //speed 播放速度
  78          {          
  79   1          
  80   1              //
  81   1          UINT Time_long = 0; //当前音符的时值对应的定时器计数
  82   1          UINT Time_flag = 0;         //当前音符的发声时值对应的计数值
  83   1          for (i = 0; i < sizeof (xiaoxingxing); ) 
  84   1              {
  85   2              while (!TimeFlag) ;
  86   2              TimeFlag = 0;
  87   2              if (flag == 0) 
  88   2                      {                                                         
  89   3                  Time_long = (ULONG)240 * (ULONG)Fre[idx] / ((ULONG)fenyinfu[i] * (ULONG)speed);
  90   3                  Time_flag = Time_long - (Time_long >> 2);           //当前音符时值的前3/4发声，后1/4静音
  91   3                  enable = 1;
  92   3                  flag++;
  93   3              }
  94   2              else 
  95   2                      {
  96   3                  if (flag == Time_long) 
  97   3                              {
  98   4                      flag = 0;
  99   4                      i++;                                                                    
 100   4                      }
 101   3                  else 
 102   3                              {
 103   4                      flag++;
 104   4                      if (flag == Time_flag) 
 105   4                                      {
 106   5                          enable = 0;
 107   5                      }
 108   4                  }
 109   3              }
 110   2          }
 111   1      }
 112          
 113          
 114          void Clocker() 
 115          {
 116   1          Timer0();
 117   1              Timer1();
C51 COMPILER V9.00   CLOCKER                                                               01/16/2019 10:26:32 PAGE 3   

 118   1          PlayMusic(90); 
 119   1      }
 120          
 121          void InterruptTmr0() interrupt 1 
 122          {
 123   1          TH0 = T0RH;
 124   1          TL0 = T0RL;
 125   1          TimeFlag = 1;
 126   1              TR1 = 1;
 127   1          if (enable)
 128   1              BUZZ = ~BUZZ;
 129   1          else
 130   1              BUZZ = 1;
 131   1      }
 132          
 133          void InterruptTmr1() interrupt 3
 134          {
 135   1              TR1 = 0;
 136   1              if (flag == 0) 
 137   1              {                                                         
 138   2                      idx = xiaoxingxing[i] - 1;
 139   2                      T0RH = Time[idx] >> 8;
 140   2                      T0RL = Time[idx];
 141   2              }
 142   1              TH1=(65536-10)/256;
 143   1              TL1=(65536-10)%256;
 144   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    329    ----
   CONSTANT SIZE    =     92    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
