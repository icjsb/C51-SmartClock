C51 COMPILER V9.00   TEMPERATURE                                                           01/16/2019 10:26:32 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE TEMPERATURE
OBJECT MODULE PLACED IN Temperature.OBJ
COMPILER INVOKED BY: D:\MCU\KEILMDK\C51\BIN\C51.EXE Temperature.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include"temp.h"
   2          /*******************************************************************************
   3          
   4          * 函数名         : Delay1ms
   5          * 函数功能               : 延时函数
   6          
   7          *******************************************************************************/
   8          
   9          void Delay1ms(unsigned int y)
  10          {
  11   1              unsigned int x;
  12   1              for(y;y>0;y--)
  13   1                      for(x=110;x>0;x--);
  14   1      }
  15          
  16          /*******************************************************************************
  17          
  18          * 函数名         : Ds18b20Init
  19          * 输出           : 初始化成功返回1，失败返回0
  20          
  21          *******************************************************************************/
  22          
  23          unsigned char Ds18b20Init()
  24          {
  25   1              unsigned int i;
  26   1              DSPORT=0;                        //将总线拉低480us~960us
  27   1              i=70;   
  28   1              while(i--);//延时642us
  29   1              DSPORT=1;                       //然后拉高总线，如果DS18B20做出反应会将在15us~60us后总线拉低
  30   1              i=0;
  31   1              while(DSPORT)   //等待DS18B20拉低总线
  32   1              {
  33   2                      i++;
  34   2                      if(i>5000)//等待>5MS
  35   2                              return 0;//初始化失败   
  36   2              }
  37   1              return 1;//初始化成功
  38   1      }
  39          
  40          /*******************************************************************************
  41          
  42          * 函数名         : Ds18b20WriteByte
  43          * 函数功能               : 向18B20写入一个字节
  44          
  45          *******************************************************************************/
  46          
  47          void Ds18b20WriteByte(unsigned char dat)
  48          {
  49   1              unsigned int i,j;
  50   1              for(j=0;j<8;j++)
  51   1              {
  52   2                      DSPORT=0;                       //每写入一位数据之前先把总线拉低1us
  53   2                      i++;
  54   2                      DSPORT=dat&0x01; //然后写入一个数据，从最低位开始
  55   2                      i=6;
C51 COMPILER V9.00   TEMPERATURE                                                           01/16/2019 10:26:32 PAGE 2   

  56   2                      while(i--); //延时68us，持续时间最少60us
  57   2                      DSPORT=1;       //然后释放总线，至少1us给总线恢复时间才能接着写入第二个数值
  58   2                      dat>>=1;
  59   2              }
  60   1      }
  61          /*******************************************************************************
  62          
  63          * 函数名         : Ds18b20ReadByte
  64          * 函数功能               : 读取一个字节
  65          
  66          *******************************************************************************/
  67          
  68          
  69          unsigned char Ds18b20ReadByte()
  70          {
  71   1              unsigned char byte,bi;
  72   1              unsigned int i,j;       
  73   1              for(j=8;j>0;j--)
  74   1              {
  75   2                      DSPORT=0;//先将总线拉低1us
  76   2                      i++;
  77   2                      DSPORT=1;//然后释放总线
  78   2                      i++;
  79   2                      i++;//延时6us等待数据稳定
  80   2                      bi=DSPORT;       //读取数据，从最低位开始读取
  81   2                      /*将byte左移一位，然后与上右移7位后的bi，注意移动之后移掉那位补0。*/
  82   2                      byte=(byte>>1)|(bi<<7);                                           
  83   2                      i=4;            //读取完之后等待48us再接着读取下一个数
  84   2                      while(i--);
  85   2              }                               
  86   1              return byte;
  87   1      }
  88          /*******************************************************************************
  89          
  90          * 函数名         : Ds18b20ChangTemp
  91          * 函数功能               : 让18b20开始转换温度
  92          
  93          *******************************************************************************/
  94          
  95          void  Ds18b20ChangTemp()
  96          {
  97   1              Ds18b20Init();
  98   1              Delay1ms(1);
  99   1              Ds18b20WriteByte(0xcc);         //跳过ROM操作命令                
 100   1              Ds18b20WriteByte(0x44);     //温度转换命令
 101   1      //      Delay1ms(100);  //等待转换成功，而如果你是一直刷着的话，就不用这个延时了
 102   1         
 103   1      }
 104          /*******************************************************************************
 105          
 106          * 函数名         : Ds18b20ReadTempCom
 107          * 函数功能                 : 发送读取温度命令
 108          
 109          *******************************************************************************/
 110          
 111          void  Ds18b20ReadTempCom()
 112          {       
 113   1      
 114   1              Ds18b20Init();
 115   1              Delay1ms(1);
 116   1              Ds18b20WriteByte(0xcc);  //跳过ROM操作命令
 117   1              Ds18b20WriteByte(0xbe);  //发送读取温度命令
C51 COMPILER V9.00   TEMPERATURE                                                           01/16/2019 10:26:32 PAGE 3   

 118   1      }
 119          /*******************************************************************************
 120          
 121          * 函数名         : Ds18b20ReadTemp
 122          * 函数功能               : 读取温度
 123          
 124          *******************************************************************************/
 125          
 126          int Ds18b20ReadTemp()
 127          {
 128   1              int temp=0;
 129   1              unsigned char tmh,tml;
 130   1              Ds18b20ChangTemp();                             //先写入转换命令
 131   1              Ds18b20ReadTempCom();                   //然后等待转换完后发送读取温度命令
 132   1              tml=Ds18b20ReadByte();          //读取温度值共16位，先读低字节
 133   1              tmh=Ds18b20ReadByte();          //再读高字节
 134   1              temp=tmh;
 135   1              temp<<=8;
 136   1              temp|=tml;
 137   1              return temp;
 138   1      }
 139          
 140          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    241    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
